% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggsave_with_metadata.R
\name{ggsave_with_metadata}
\alias{ggsave_with_metadata}
\title{Wrapper around the ggplot2 ggsave function. Saves a ggplot (or other grid object) and captures analysis relevant metadata in a .json file}
\usage{
ggsave_with_metadata(
  filename,
  plot = ggplot2::last_plot(),
  meta_type = "NA",
  meta_equations = NULL,
  meta_notes = NULL,
  meta_abbrevs = NULL,
  ...
)
}
\arguments{
\item{filename}{The filename for the plot to save to.}

\item{plot}{The plot object to save. Default is the last displayed plot (\code{ggplot2::last_plot()}).}

\item{meta_type}{A string to specify the type of object. Default is \code{"NA"}.}

\item{meta_equations}{A string or vector of strings representing equations to include in the metadata. Default is \code{NULL}.}

\item{meta_notes}{A string or vector of strings representing notes to include in the metadata. Default is \code{NULL}.}

\item{meta_abbrevs}{A string or vector of strings representing abbreviations to include in the metadata. Default is \code{NULL}.}

\item{...}{Additional arguments passed to the \code{ggplot2::ggsave()} function.}
}
\description{
Extension to the \code{ggsave()} function that allows capturing object metadata as a separate \code{.json} file.
}
\examples{
\dontrun{

# ---------------------------------------------------------------------------
# Construct and save a simple ggplot
# ---------------------------------------------------------------------------
g <- ggplot2::ggplot(
  data = Theoph,
  ggplot2::aes(x = Time, y = conc, group = Subject)
) +
  ggplot2::geom_point() +
  ggplot2::geom_line() +
  ggplot2::theme_bw()

# Save a png using the wrapper function
figures_path <- here::here("OUTPUTS", "figures")
plot_file_name <- "01-12345-pk-timecourse1.png"
ggsave_with_metadata(filename = file.path(figures_path, plot_file_name))
}
}
